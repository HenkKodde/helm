{
  "PORT": "$ingress_port",
  "HOSTNAME": "$ingress_host",
  "ENDPOINT_SOURCE_URL": "http://perf1-central-ledger.mojaloop.live/admin/participants/{{fsp}}/endpoints",
  "ENDPOINT_CACHE_CONFIG": {
    "expiresIn": 180000,
    "generateTimeout": 30000
  },
  "AMOUNT": {
    "PRECISION": 10,
    "SCALE": 2
  },
  "HANDLERS": {
    "DISABLED": true,
    "API": {
      "DISABLED": false
    }
  },
  "INSTRUMENTATION": {
    "METRICS": {
      "DISABLED": false,
      "config": {
        "timeout": 5000,
        "prefix": "moja_ml_service_"
      }
    }
  },
  "KAFKA": {
    "TOPIC_TEMPLATES": {
      "PARTICIPANT_TOPIC_TEMPLATE": {
        "TEMPLATE": "topic-{{participantName}}-{{functionality}}",
        "REGEX": "topic-(.*)-(.*)-(.*)"
      },
      "NOTIFICATION_TOPIC_TEMPLATE": {
        "TEMPLATE": "topic-notification-event",
        "REGEX": "topic-notification-event"
      },
      "FULFIL_TOPIC_TEMPLATE": {
        "TEMPLATE": "topic-transfer-fulfil",
        "REGEX": "topic-transfer-fulfil"
      }
    },
    "CONSUMER": {
      "NOTIFICATION": {
        "EVENT": {
          "config": {
            "options": {
              "mode": 2,
              "batchSize": 1,
              "recursiveTimeout": 100,
              "messageCharset": "utf8",
              "messageAsJSON": true,
              "sync": true,
              "consumeTimeout": 1000
            },
            "rdkafkaConf": {
              "client.id": "ml-con-notification-event",
              "group.id": "kafka-ml-api-adapter",
              "metadata.broker.list": "$kafka_host:$kafka_port",
              "socket.blocking.max.ms": 1,
              "fetch.wait.max.ms": 100,
              "fetch.error.backoff.ms": 1,
              "broker.version.fallback": "0.10.1.0",
              "api.version.request": true,
              "enable.auto.commit": true,
              "auto.commit.interval.ms": 200,
              "socket.keepalive.enable": true,
              "socket.max.fails": 1,
              "partition.assignment.strategy": "range"
            },
            "topicConf": {
              "auto.offset.reset": "earliest"
            }
          }
        }
      }
    },
    "PRODUCER": {
      "TRANSFER": {
        "PREPARE": {
          "config": {
            "options": {
              "messageCharset": "utf8"
            },
            "rdkafkaConf": {
              "metadata.broker.list": "$kafka_host:$kafka_port",
              "client.id": "ml-prod-transfer-prepare",
              "event_cb": true,
              "compression.codec": "none",
              "retry.backoff.ms": 100,
              "message.send.max.retries": 2,
              "socket.keepalive.enable": true,
              "socket.max.fails": 0,
              "queue.buffering.max.messages": 10000000,
              "batch.num.messages": 100,
              "api.version.request": true,
              "dr_cb": true,
              "partitioner": "random"
            },
            "topicConf": {
              "request.required.acks": "all"
            }
          }
        },
        "FULFIL": {
          "config": {
            "options": {
              "messageCharset": "utf8"
            },
            "rdkafkaConf": {
              "metadata.broker.list": "$kafka_host:$kafka_port",
              "client.id": "ml-prod-transfer-fulfil",
              "event_cb": true,
              "compression.codec": "none",
              "retry.backoff.ms": 100,
              "message.send.max.retries": 2,
              "socket.keepalive.enable": true,
              "socket.max.fails": 0,
              "queue.buffering.max.messages": 10000000,
              "batch.num.messages": 100,
              "api.version.request": true,
              "dr_cb": true,
              "partitioner": "random"
            },
            "topicConf": {
              "request.required.acks": "all"
            }
          }
        }
      }
    }
  }
}